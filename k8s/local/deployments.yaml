apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: static-files-deploy
  name: static-files-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: static-files-deploy
  template:
    metadata:
      labels:
        app: static-files-deploy
    spec:
      containers:
      - image: manedurphy/static-files:1.0.0
        imagePullPolicy: Always
        name: static-files
        env:
        - name: HOSTS_API
          value: http://hosts-service:8080
        - name: PROPERTIES_API
          value: http://properties-service:8081
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /healthz
            port: 5000
          failureThreshold: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-read-deploy
  name: redis-read-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-read-deploy
  template:
    metadata:
      labels:
        app: redis-read-deploy
    spec:
      containers:
      - image: redis:6.2.3-alpine
        name: redis
        command:
          - "redis-server"
        args:
          - "--replicaof"
          - "redis-write-service.airbnb.svc.cluster.local"
          - "6379"
          - "--protected-mode"
          - "no"
        resources:
          requests:
            memory: "50Mi"
            cpu: "25m"
          limits:
            memory: "75Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-write-deploy
  name: redis-write-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-write-deploy
  template:
    metadata:
      labels:
        app: redis-write-deploy
    spec:
      containers:
      - image: redis:6.2.3-alpine
        name: redis
        command:
          - "redis-server"
        args:
          - "--protected-mode"
          - "no"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: properties-api-deploy
  name: properties-api-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: properties-api-deploy
  template:
    metadata:
      labels:
        app: properties-api-deploy
    spec:
      containers:
      - image: manedurphy/properties-api:1.0.0
        imagePullPolicy: Always
        name: properties-api
        env:
        - name: HOST
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: host
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: password
        - name: HOSTS_API
          value: http://hosts-api-service:8080
        - name: MYSQL_DB
          value: properties
        - name: HOSTS_API
          value: http://hosts-api-service:8080
        - name: GIN_MODE
          value: release
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /properties/healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /properties/healthz
            port: 8081
          failureThreshold: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hosts-api-deploy
  name: hosts-api-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hosts-api-deploy
  template:
    metadata:
      labels:
        app: hosts-api-deploy
    spec:
      containers:
      - image: manedurphy/hosts-api:1.0.0
        imagePullPolicy: Always
        name: hosts-api
        env:
        - name: HOST
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: host
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: password
        - name: MYSQL_DB
          value: hosts
        - name: PROPERTIES_API
          value: http://properties-api-service:8081
        - name: GIN_MODE
          value: release
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /hosts/healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /hosts/healthz
            port: 8080
          failureThreshold: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: get-data-api-deploy
  name: get-data-api-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: get-data-api-deploy
  template:
    metadata:
      labels:
        app: get-data-api-deploy
    spec:
      containers:
      - image: manedurphy/get-data-api
        imagePullPolicy: Always
        name: get-data-api
        env:
        - name: REDIS_READ_URL
          value: redis-read-service:6379
        - name: REDIS_WRITE_URL
          value: redis-write-service:6379
        - name: HOSTS_API
          value: http://hosts-api-service:8080
        - name: PROPERTIES_API
          value: http://properties-api-service:8081
        - name: GIN_MODE
          value: release
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /api/healthz
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /api/healthz
            port: 8000
          failureThreshold: 30
          periodSeconds: 10