version: "3.9"

services:
  hosts-service:
    container_name: hosts-api
    restart: always
    build:
      context: ./apis/hosts-api
      dockerfile: Dockerfile.dev
    ports:
    - 8080:8080
    environment:
    - HOST=hosts-db
    - MYSQL_USER=root
    - MYSQL_PASSWORD=password
    - MYSQL_DB=hosts
    - PROPERTIES_API=http://properties-service:8081
    depends_on: 
    - hosts-db

  properties-service:
    container_name: properties-api
    restart: always
    build:
      context: ./apis/properties-api
      dockerfile: Dockerfile.dev
    ports:
    - 8081:8081
    environment:
    - HOST=properties-db
    - MYSQL_USER=root
    - MYSQL_PASSWORD=password
    - MYSQL_DB=properties
    - HOSTS_API=http://hosts-service:8080
    depends_on: 
    - properties-db

  get-data-service:
    container_name: get-data-api
    restart: always
    build:
      context: ./apis/get-data-api
      dockerfile: Dockerfile
    ports:
    - 8000:8000
    depends_on:
    - redis-write
    - redis-read
    environment:
    - REDIS_WRITE_URL=redis-write:6379
    - REDIS_READ_URL=redis-read:6379
    - HOSTS_API=http://hosts-service:8080
    - PROPERTIES_API=http://properties-service:8081

  static-files:
    container_name: static-files
    restart: always
    build:
      context: ./static-server
      dockerfile: Dockerfile.dev
    ports:
    - 5000:5000
    environment: 
    - HOSTS_API=http://hosts-service:8080
    - PROPERTIES_API=http://properties-service:8081
    - GET_DATA_API=http://get-data-service:8000

  hosts-db:
    restart: always
    image: mysql:8.0.25
    environment:
    - MYSQL_ROOT_PASSWORD=password
    - MYSQL_DATABASE=hosts
    volumes:
    - ./data/hosted-by:/var/lib/mysql

  properties-db:
    restart: always
    image: mysql:8.0.25
    environment:
    - MYSQL_ROOT_PASSWORD=password
    - MYSQL_DATABASE=properties
    volumes:
    - ./data/photo-header:/var/lib/mysql

  redis-write:
    restart: always
    image: redis:6.2.3-alpine
    command: ["redis-server", "--protected-mode", "no"]

  redis-read:
    restart: always
    image: redis:6.2.3-alpine
    command: ["redis-server", "--replicaof", "redis-write", "6379", "--protected-mode", "no"]